[vaul-drawer] {
  touch-action: none;
  transition: transform 0.5s cubic-bezier(0.32, 0.72, 0, 1);
}

[vaul-drawer][vaul-drawer-direction='bottom'] {
  transform: translate3d(0, 100%, 0);
}

[vaul-drawer][vaul-drawer-direction='top'] {
  transform: translate3d(0, -100%, 0);
}

[vaul-drawer][vaul-drawer-direction='left'] {
  transform: translate3d(-100%, 0, 0);
}

[vaul-drawer][vaul-drawer-direction='right'] {
  transform: translate3d(100%, 0, 0);
}

.vaul-dragging .vaul-scrollable [vault-drawer-direction='top'] {
  overflow-y: hidden !important;
}
.vaul-dragging .vaul-scrollable [vault-drawer-direction='bottom'] {
  overflow-y: hidden !important;
}

.vaul-dragging .vaul-scrollable [vault-drawer-direction='left'] {
  overflow-x: hidden !important;
}

.vaul-dragging .vaul-scrollable [vault-drawer-direction='right'] {
  overflow-x: hidden !important;
}

[vaul-drawer][vaul-drawer-visible='true'][vaul-drawer-direction='top'] {
  transform: translate3d(0, var(--snap-point-height, 0), 0);
}

[vaul-drawer][vaul-drawer-visible='true'][vaul-drawer-direction='bottom'] {
  transform: translate3d(0, var(--snap-point-height, 0), 0);
}

[vaul-drawer][vaul-drawer-visible='true'][vaul-drawer-direction='left'] {
  transform: translate3d(var(--snap-point-height, 0), 0, 0);
}

[vaul-drawer][vaul-drawer-visible='true'][vaul-drawer-direction='right'] {
  transform: translate3d(var(--snap-point-height, 0), 0, 0);
}

[vaul-overlay] {
  opacity: 0;
  transition: opacity 0.5s cubic-bezier(0.32, 0.72, 0, 1);
}

[vaul-overlay][vaul-drawer-visible='true'] {
  opacity: 1;
}

[vaul-drawer]::after {
  content: '';
  position: absolute;
  background: inherit;
  background-color: inherit;
}

[vaul-drawer][vaul-drawer-direction='top']::after {
  top: initial;
  bottom: 100%;
  left: 0;
  right: 0;
  height: 200%;
}

[vaul-drawer][vaul-drawer-direction='bottom']::after {
  top: 100%;
  bottom: initial;
  left: 0;
  right: 0;
  height: 200%;
}

[vaul-drawer][vaul-drawer-direction='left']::after {
  left: initial;
  right: 100%;
  top: 0;
  bottom: 0;
  width: 200%;
}

[vaul-drawer][vaul-drawer-direction='right']::after {
  left: 100%;
  right: initial;
  top: 0;
  bottom: 0;
  width: 200%;
}

[vaul-handle] {
  display: block;
  position: relative;
  opacity: 0.8;
  margin-left: auto;
  margin-right: auto;
  height: 5px;
  width: 56px;
  border-radius: 1rem;
  touch-action: pan-y;
  cursor: grab;
}

[vaul-handle]:hover,
[vaul-handle]:active {
  opacity: 1;
}

[vaul-handle]:active {
  cursor: grabbing;
}

[vaul-handle-hitarea] {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: max(100%, 2.75rem); /* 44px */
  height: max(100%, 2.75rem); /* 44px */
  touch-action: inherit;
}

[vaul-overlay][vaul-snap-points='true']:not([vaul-snap-points-overlay='true']):not([data-state='closed']) {
  opacity: 0;
}

[vaul-overlay][vaul-snap-points-overlay='true']:not([vaul-drawer-visible='false']) {
  opacity: 1;
}

/* This will allow us to not animate via animation, but still benefit from delaying unmount via Radix. */
@keyframes fake-animation {
  from {
  }
  to {
  }
}

@media (pointer: fine) {
  [vaul-handle-hitarea]: {
    width: 100%;
    height: 100%;
  }
}

@media (hover: hover) and (pointer: fine) {
  [vaul-drawer] {
    user-select: none;
  }
}
